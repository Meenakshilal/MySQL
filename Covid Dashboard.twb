<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.22.0608.0810                               -->
<workbook original-version='18.1' source-build='2021.3.13 (20213.22.0608.0810)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='covid_deathpercentage (covid_deathpercentage(T1))' inline='true' name='federated.1mllbtb1y7l5b916n1lc50bmmud2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_deathpercentage(T1)' name='excel-direct.1ds7by80f4lbbb1gep4hg1yx4ke8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/meena/Downloads/covid_deathpercentage(T1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ds7by80f4lbbb1gep4hg1yx4ke8' name='covid_deathpercentage' table='[covid_deathpercentage$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ds7by80f4lbbb1gep4hg1yx4ke8' name='covid_deathpercentage' table='[covid_deathpercentage$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_deathpercentage]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid_deathpercentage]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!deathpercentage_D03C103F8100424FBEAF29DE119FEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid_deathpercentage]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!deathpercentage_D03C103F8100424FBEAF29DE119FEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[covid_deathpercentage]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!deathpercentage_D03C103F8100424FBEAF29DE119FEAC7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_deathpercentage' datatype='table' name='[__tableau_internal_object_id__].[covid!deathpercentage_D03C103F8100424FBEAF29DE119FEAC7]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_deathpercentage' id='covid!deathpercentage_D03C103F8100424FBEAF29DE119FEAC7'>
            <properties context=''>
              <relation connection='excel-direct.1ds7by80f4lbbb1gep4hg1yx4ke8' name='covid_deathpercentage' table='[covid_deathpercentage$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TOTALDEATH (T2) (TOTALDEATH (TB2))' inline='true' name='federated.09gk5rc1t0kkw21562x2j11p0syh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TOTALDEATH (TB2)' name='excel-direct.1f2k7r91cgwz9c10fynca0v11yih'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/meena/Downloads/TOTALDEATH (TB2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1f2k7r91cgwz9c10fynca0v11yih' name='TOTALDEATH (T2)' table='[&apos;TOTALDEATH (T2)$&apos;]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1f2k7r91cgwz9c10fynca0v11yih' name='TOTALDEATH (T2)' table='[&apos;TOTALDEATH (T2)$&apos;]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[TOTALDEATH (T2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[TOTALDEATH (T2)]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TOTALDEATH (T2)_BFABE869E5914038B2945337EBD9B4E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[TOTALDEATH (T2)]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TOTALDEATH (T2)_BFABE869E5914038B2945337EBD9B4E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='TOTALDEATH (T2)' datatype='table' name='[__tableau_internal_object_id__].[TOTALDEATH (T2)_BFABE869E5914038B2945337EBD9B4E9]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='TOTALDEATH (T2)' id='TOTALDEATH (T2)_BFABE869E5914038B2945337EBD9B4E9'>
            <properties context=''>
              <relation connection='excel-direct.1f2k7r91cgwz9c10fynca0v11yih' name='TOTALDEATH (T2)' table='[&apos;TOTALDEATH (T2)$&apos;]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Population infected percenatage (Population infected percenatage (TB3))' inline='true' name='federated.1z0z6t31d9qzih153j2nu00qvmi4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Population infected percenatage (TB3)' name='excel-direct.1vubjyo0z43afm1c0js3k1tznam1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/meena/Downloads/Population infected percenatage (TB3).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1vubjyo0z43afm1c0js3k1tznam1' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1vubjyo0z43afm1c0js3k1tznam1' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D245:no:A1:D245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_D02B2B182DB74A71AB0CABD39B8BD1DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_D02B2B182DB74A71AB0CABD39B8BD1DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_D02B2B182DB74A71AB0CABD39B8BD1DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_D02B2B182DB74A71AB0CABD39B8BD1DC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Population infected percenatage' datatype='table' name='[__tableau_internal_object_id__].[Population infected percenatage_D02B2B182DB74A71AB0CABD39B8BD1DC]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Population infected percenatage' id='Population infected percenatage_D02B2B182DB74A71AB0CABD39B8BD1DC'>
            <properties context=''>
              <relation connection='excel-direct.1vubjyo0z43afm1c0js3k1tznam1' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
                <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Population infected percenatage (Population infected percenatage with date (TB4))' inline='true' name='federated.1y91dd513w78nh1fxrb031ik1aie' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Population infected percenatage with date (TB4)' name='excel-direct.1ozok3c0t1xtr510qzm51184iail'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/meena/Downloads/Population infected percenatage with date (TB4).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ozok3c0t1xtr510qzm51184iail' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:E1001:no:A1:E1001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ozok3c0t1xtr510qzm51184iail' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:E1001:no:A1:E1001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E1001:no:A1:E1001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_5A52929C60934E05BCE945972E47CFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_5A52929C60934E05BCE945972E47CFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_5A52929C60934E05BCE945972E47CFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_5A52929C60934E05BCE945972E47CFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_5A52929C60934E05BCE945972E47CFEB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Population infected percenatage' datatype='table' name='[__tableau_internal_object_id__].[Population infected percenatage_5A52929C60934E05BCE945972E47CFEB]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Population infected percenatage' id='Population infected percenatage_5A52929C60934E05BCE945972E47CFEB'>
            <properties context=''>
              <relation connection='excel-direct.1ozok3c0t1xtr510qzm51184iail' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
                <columns gridOrigin='A1:E1001:no:A1:E1001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TB4' inline='true' name='federated.17nad3417rjalh16wn6yj06rf82h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TB4' name='excel-direct.08bav8y1thqlh21h7wjqb04jb182'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/meena/Downloads/TB4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.08bav8y1thqlh21h7wjqb04jb182' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:E245:no:A1:E245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.08bav8y1thqlh21h7wjqb04jb182' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:E245:no:A1:E245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E245:no:A1:E245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Population infected percenatage' datatype='table' name='[__tableau_internal_object_id__].[Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Population infected percenatage' id='Population infected percenatage_2CFE8FE633F040F699CCE6209B45D17A'>
            <properties context=''>
              <relation connection='excel-direct.08bav8y1thqlh21h7wjqb04jb182' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
                <columns gridOrigin='A1:E245:no:A1:E245:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Population infected percenatage (TB4) (2)' inline='true' name='federated.1fxx5jl10127ly1e1hifq0pb0s6m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TB4' name='excel-direct.1q66hbd0iufacq17gkch40atkd0y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/meena/Downloads/TB4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1q66hbd0iufacq17gkch40atkd0y' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:E245:no:A1:E245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1q66hbd0iufacq17gkch40atkd0y' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
          <columns gridOrigin='A1:E245:no:A1:E245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E245:no:A1:E245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_4789B90970EF4633AD46BA5EFF871441]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_4789B90970EF4633AD46BA5EFF871441]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_4789B90970EF4633AD46BA5EFF871441]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_4789B90970EF4633AD46BA5EFF871441]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Population infected percenatage]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Population infected percenatage_4789B90970EF4633AD46BA5EFF871441]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Population infected percenatage' datatype='table' name='[__tableau_internal_object_id__].[Population infected percenatage_4789B90970EF4633AD46BA5EFF871441]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Population infected percenatage' id='Population infected percenatage_4789B90970EF4633AD46BA5EFF871441'>
            <properties context=''>
              <relation connection='excel-direct.1q66hbd0iufacq17gkch40atkd0y' name='Population infected percenatage' table='[&apos;Population infected percenatage$&apos;]' type='table'>
                <columns gridOrigin='A1:E245:no:A1:E245:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_deathpercentage (covid_deathpercentage(T1))' name='federated.1mllbtb1y7l5b916n1lc50bmmud2' />
          </datasources>
          <datasource-dependencies datasource='federated.1mllbtb1y7l5b916n1lc50bmmud2'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mllbtb1y7l5b916n1lc50bmmud2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1mllbtb1y7l5b916n1lc50bmmud2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1mllbtb1y7l5b916n1lc50bmmud2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1mllbtb1y7l5b916n1lc50bmmud2].[:Measure Names]' value='157' />
            <format attr='height' value='51' />
            <format attr='text-format' field='[federated.1mllbtb1y7l5b916n1lc50bmmud2].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ddebf0' />
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f0ef' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1mllbtb1y7l5b916n1lc50bmmud2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1mllbtb1y7l5b916n1lc50bmmud2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{312C15A9-28DD-420D-A93A-F21D59E58094}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TOTALDEATH (T2) (TOTALDEATH (TB2))' name='federated.09gk5rc1t0kkw21562x2j11p0syh' />
          </datasources>
          <datasource-dependencies datasource='federated.09gk5rc1t0kkw21562x2j11p0syh'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09gk5rc1t0kkw21562x2j11p0syh].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{CAD3273F-60E2-4468-9442-5C983B416139}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Population infected percenatage (Population infected percenatage (TB3))' name='federated.1z0z6t31d9qzih153j2nu00qvmi4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1z0z6t31d9qzih153j2nu00qvmi4'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[Longitude (generated)]' field-type='quantitative' max='12365499.145327982' min='-10320579.854835965' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[Latitude (generated)]' field-type='quantitative' max='14500242.544906229' min='-9549479.8240370974' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected Per Country'>
              <formatted-text>
                <run>Percent Population Infected Per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[none:Location:nk]' />
              <color column='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1z0z6t31d9qzih153j2nu00qvmi4].[Latitude (generated)]</rows>
        <cols>[federated.1z0z6t31d9qzih153j2nu00qvmi4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B40CFDC1-3F4E-4C29-8F29-5B0729CB1AE2}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Population infected percenatage (Population infected percenatage with date (TB4))' name='federated.1y91dd513w78nh1fxrb031ik1aie' />
          </datasources>
          <datasource-dependencies datasource='federated.1y91dd513w78nh1fxrb031ik1aie'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Faeroe Islands&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Gibraltar&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Portugal&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]' />
              <text column='[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y91dd513w78nh1fxrb031ik1aie].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1y91dd513w78nh1fxrb031ik1aie].[dy:date:ok]</cols>
      </table>
      <simple-id uuid='{6EF45D19-AB47-4113-88C1-E0FD888C4851}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='54375' x='45142' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='44719' x='45142' y='940'>
              <zone h='98120' id='10' name='Sheet 3' w='44719' x='45142' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='940'>
              <zone h='18331' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]' type-v2='color' w='9656' x='89861' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='19271'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='21857' id='3' name='Sheet 1' w='44659' x='483' y='940'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='76263' id='5' name='Sheet 2' w='44659' x='483' y='22797'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='12' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='166' h='21857' id='3' is-fixed='true' name='Sheet 1' w='44659' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98120' id='10' is-fixed='true' name='Sheet 3' w='44719' x='45142' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='19271'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76263' id='5' is-fixed='true' name='Sheet 2' w='44659' x='483' y='22797'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18331' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]' type-v2='color' w='9656' x='89861' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F5FB45E0-5370-408D-A6A6-691BB967CEED}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='167'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mllbtb1y7l5b916n1lc50bmmud2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A79E63BB-2C57-4DBF-BA3A-C3423BFA4861}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D9D41E5-6247-4FDB-A8E9-28A94B67A8D1}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1z0z6t31d9qzih153j2nu00qvmi4].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]</field>
            <field>[federated.1z0z6t31d9qzih153j2nu00qvmi4].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{62381FC4-2CA5-4452-A938-5EC81BE90802}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1y91dd513w78nh1fxrb031ik1aie].[none:Location:nk]</field>
            <field>[federated.1y91dd513w78nh1fxrb031ik1aie].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1537856-8EF7-4BB3-ABC2-B1DC1D1140C8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.09gk5rc1t0kkw21562x2j11p0syh].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{43D2F3EC-FA4D-41F5-BF31-F0AFB5A42EC5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='75' name='Sheet 1' width='192'>
      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
      NAi4s1p4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
